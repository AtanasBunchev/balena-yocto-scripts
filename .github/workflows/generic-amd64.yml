# This is an approximate example of a single Yocto device-type workflow
# as it would exist in a device repo.

# It will be duplicated across all device repos with only minor changes
# to the inputs and the defaults.

# TODO: We need a system to keep these inputs aligned across all device repos
name: Generic x86_64 (GPT)

on:
  # With these triggers the Yocto jobs will run
  # in parallel with the Flowzone jobs, which is fine for now
  # and allows us to better control what we want to test and when.
  # It is expected that Flowzone could fail, but yocto jobs will run.
  pull_request:
    branches:
      - "main"
      - "master"
  pull_request_target:
    branches:
      - "main"
      - "master"
  # Enable this push trigger on device repos
  # push:
  #   tags:
  #     - v[0-9]+.[0-9]+.[0-9]+\+?r?e?v?*
  #     - v20[0-9][0-9].[0-1]?[1470].[0-9]+
  # Enable this push trigger on device repos
  # workflow_dispatch:

jobs:
  yocto:
    name: Yocto
    uses: ./.github/workflows/yocto-build-deploy.yml
    # prevent duplicate workflow executions for pull_request and pull_request_target
    if: |
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
      ) || (
        github.event.pull_request.head.repo.full_name != github.repository &&
        github.event_name == 'pull_request_target'
      )
    secrets: inherit
    with:
      # runs-on: '[ "ubuntu-latest" ]'
      # On device repos we need to hardcode: machine
      # On -some- device repos, we need to also hardcode (defaults will work otherwise):
      #   for private device types: test-environment
      #   for device types we use virtualised testing for: test-workers
      machine: generic-amd64
      test-environment: bm.balena-dev.com
      test-workers: qemu
      environment: balena-staging.com
      # Below inputs are not required on device repos as the defaults should be used
      device-repo: balena-os/balena-generic
      device-repo-ref: master
